<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic Tac Toe Game</title>
  <style>
    body {
      background-color: #f0f0f0;
      font-family: Arial, sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }
    .container {
      text-align: center;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-gap: 5px;
      margin-bottom: 20px;
    }
    .cell {
      width: 100px;
      height: 100px;
      background-color: #fff;
      border: 2px solid #333;
      font-size: 32px;
      font-weight: bold;
      text-align: center;
      line-height: 100px;
      cursor: pointer;
      user-select: none;
    }
    .status {
      font-size: 24px;
      margin-bottom: 10px;
    }
    button {
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="board" id="board">
      <div class="cell" data-cell-index="0"></div>
      <div class="cell" data-cell-index="1"></div>
      <div class="cell" data-cell-index="2"></div>
      <div class="cell" data-cell-index="3"></div>
      <div class="cell" data-cell-index="4"></div>
      <div class="cell" data-cell-index="5"></div>
      <div class="cell" data-cell-index="6"></div>
      <div class="cell" data-cell-index="7"></div>
      <div class="cell" data-cell-index="8"></div>
    </div>
    <div class="status" id="status">Player 1's turn</div>
    <button id="restart">Restart Game</button>
  </div>

  <script>
    const cells = document.querySelectorAll('.cell');
    const statusDisplay = document.getElementById('status');
    const restartButton = document.getElementById('restart');

    let currentPlayer = '1';
    let gameActive = true;
    let board = ["", "", "", "", "", "", "", "", ""];

    const winningConditions = [
      [0, 1, 2], [3, 4, 5], [6, 7, 8],
      [0, 3, 6], [1, 4, 7], [2, 5, 8],
      [0, 4, 8], [2, 4, 6]
    ];

    function handleCellClick(event) {
      const clickedCell = event.target;
      const cellIndex = parseInt(clickedCell.getAttribute('data-cell-index'));

      if (board[cellIndex] !== "" || !gameActive) {
        return;
      }

      board[cellIndex] = currentPlayer;
      clickedCell.textContent = currentPlayer;

      checkResult();
    }

    function checkResult() {
      let roundWon = false;
      for (let condition of winningConditions) {
        const [a, b, c] = condition;
        if (board[a] && board[a] === board[b] && board[a] === board[c]) {
          roundWon = true;
          break;
        }
      }

      if (roundWon) {
        statusDisplay.textContent = `Player ${currentPlayer} won!  Congrats!`;
        gameActive = false;
        return;
      }

      if (!board.includes("")) {
        statusDisplay.textContent = "Game ended in a draw!";
        gameActive = false;
        return;
      }

      currentPlayer = currentPlayer === "1" ? "0" : "1";
      statusDisplay.textContent = `Player ${currentPlayer}'s turn`;
    }

    function restartGame() {
      currentPlayer = "1";
      board = ["", "", "", "", "", "", "", "", ""];
      gameActive = true;
      statusDisplay.textContent = `Player 1's turn`;
      cells.forEach(cell => cell.textContent = "");
    }

    cells.forEach(cell => cell.addEventListener('click', handleCellClick));
    restartButton.addEventListener('click', restartGame);
  </script>
</body>
</html>
